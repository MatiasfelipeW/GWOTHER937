// Configuraci√≥n inicial
const ADMIN_SECRET = "Gwother937";
let publishedEvents = JSON.parse(localStorage.getItem('publishedEvents')) || [];

// Funci√≥n para renderizar eventos
function renderPublishedEvents() {
  const container = document.getElementById('published-events-list');
  
  if (!container) return; // Salir si no existe el contenedor
  
  if (publishedEvents.length === 0) {
    container.innerHTML = '<div class="alert alert-dark">No hay streams programados a√∫n. Vuelve pronto.</div>';
    return;
  }
  
  // Ordenar eventos por fecha
  const sortedEvents = [...publishedEvents].sort((a, b) => new Date(a.date) - new Date(b.date));
  
  container.innerHTML = sortedEvents.map(event => `
    <div class="event-card">
      <h4>${event.title}</h4>
      <div class="event-date">üìÖ ${formatEventDate(event.date)}</div>
      <p>No te pierdas este stream especial. ¬°Ag√©ndalo!</p>
      <button class="add-to-calendar" onclick="addToCalendar('${event.title}', '${event.date}')">
        üóìÔ∏è Agregar a mi calendario
      </button>
      <button class="btn btn-sm btn-outline-danger mt-2 admin-controls" 
              onclick="deleteEvent('${event.id}')" style="display: none;">
        Eliminar
      </button>
    </div>
  `).join('');
}

// Formatear fecha
function formatEventDate(dateString) {
  const options = { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric', 
    hour: '2-digit', 
    minute: '2-digit',
    timeZoneName: 'short'
  };
  return new Date(dateString).toLocaleDateString('es-ES', options);
}

// Eliminar evento
function deleteEvent(eventId) {
  if (confirm('¬øEst√°s seguro de eliminar este evento?')) {
    publishedEvents = publishedEvents.filter(e => e.id !== eventId);
    localStorage.setItem('publishedEvents', JSON.stringify(publishedEvents));
    renderPublishedEvents();
  }
}

// A√±adir a Google Calendar
function addToCalendar(title, date) {
  const startDate = new Date(date).toISOString().replace(/-|:|\.\d+/g, '');
  const endDate = new Date(new Date(date).getTime() + 2 * 60 * 60 * 1000).toISOString().replace(/-|:|\.\d+/g, '');
  
  const url = `https://www.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(title)}&dates=${startDate}/${endDate}&details=Transmisi√≥n en vivo de ${encodeURIComponent(title)}&location=${encodeURIComponent(window.location.href)}`;
  
  window.open(url, '_blank');
}

// Funci√≥n para cambiar el idioma
function changeLanguage(lang) {
  const translations = {
    es: {
      title: "Gwother937",
      description: "üî• Atr√©vete a descubrir mi mundo exclusivo üî•<br>Contenido premium, sensualidad sin l√≠mites y acceso directo a m√≠.",
      live_info: "En el bot√≥n de transmisi√≥n en vivo encontrar√°s acceso directo a la p√°gina en la que estar√© en vivo. √önete a mi canal privado de Telegram y sigue mis streams.",
      onlyfans: "OnlyFans",
      telegram: "Telegram",
      instagram: "Instagram",
      whatsapp: "WhatsApp",
      tiktok: "TikTok",
      flirt4free: "Flirt4Free",
      copyright: "¬© 2025 Gwother937. Todos los derechos reservados.",
      live: "Transmisi√≥n en Vivo"
    },
    en: {
      title: "Gwother937",
      description: "üî• Dare to discover my exclusive world üî•<br>Premium content, limitless sensuality and direct access to me.",
      live_info: "In the live streaming button you'll find direct access to the page where I'll be live. Join my private Telegram channel and follow my streams.",
      onlyfans: "OnlyFans",
      telegram: "Telegram",
      instagram: "Instagram",
      whatsapp: "WhatsApp",
      tiktok: "TikTok",
      flirt4free: "Flirt4Free",
      copyright: "¬© 2025 Gwother937. All rights reserved.",
      live: "Live Streaming"
    },
    de: {
      title: "Gwother937",
      description: "üî• Wage es, meine exklusive Welt zu entdecken üî•<br>Premium-Inhalte, grenzenlose Sinnlichkeit und direkter Zugang zu mir.",
      live_info: "Im Live-Streaming-Button findest du direkten Zugang zu der Seite, auf der ich live sein werde. Trete meinem privaten Telegram-Kanal bei und verfolge meine Streams.",
      onlyfans: "OnlyFans",
      telegram: "Telegram",
      instagram: "Instagram",
      whatsapp: "WhatsApp",
      tiktok: "TikTok",
      flirt4free: "Flirt4Free",
      copyright: "¬© 2025 Gwother937. Alle Rechte vorbehalten.",
      live: "Live-Streaming"
    },
    ru: {
      title: "Gwother937",
      description: "üî• –û—Å–º–µ–ª—å—Ç–µ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è –º–æ–π —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –º–∏—Ä üî•<br>–ü—Ä–µ–º–∏—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç, –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–∞—è —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫–æ –º–Ω–µ.",
      live_info: "–í –∫–Ω–æ–ø–∫–µ –ø—Ä—è–º–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –≥–¥–µ —è –±—É–¥—É –≤ —ç—Ñ–∏—Ä–µ. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –º–æ–µ–º—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É Telegram-–∫–∞–Ω–∞–ª—É –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –º–æ–∏–º–∏ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è–º–∏.",
      onlyfans: "OnlyFans",
      telegram: "Telegram",
      instagram: "Instagram",
      whatsapp: "WhatsApp",
      tiktok: "TikTok",
      flirt4free: "Flirt4Free",
      copyright: "¬© 2025 Gwother937. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.",
      live: "–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä"
    },
    zh: {
      title: "Gwother937",
      description: "üî• Êï¢‰∫éÊé¢Á¥¢ÊàëÁöÑ‰∏ìÂ±û‰∏ñÁïå üî•<br>‰ºòË¥®ÂÜÖÂÆπÔºåÊó†ÈôêÊÄßÊÑüÔºåÁõ¥Êé•‰∏éÊàë‰∫íÂä®„ÄÇ",
      live_info: "Âú®Áõ¥Êí≠ÊåâÈíÆ‰∏≠ÔºåÊÇ®Â∞ÜÊâæÂà∞ÊàëÂ∞ÜÁõ¥Êí≠ÁöÑÈ°µÈù¢ÁöÑÁõ¥Êé•ËÆøÈóÆÈìæÊé•„ÄÇÂä†ÂÖ•ÊàëÁöÑÁßÅ‰∫∫TelegramÈ¢ëÈÅìÂπ∂ÂÖ≥Ê≥®ÊàëÁöÑÁõ¥Êí≠„ÄÇ",
      onlyfans: "OnlyFans",
      telegram: "Telegram",
      instagram: "Instagram",
      whatsapp: "WhatsApp",
      tiktok: "TikTok",
      flirt4free: "Flirt4Free",
      copyright: "¬© 2025 Gwother937„ÄÇ‰øùÁïôÊâÄÊúâÊùÉÂà©„ÄÇ",
      live: "Áõ¥Êí≠"
    }
  };

  document.querySelector('html').lang = lang;
  document.querySelector('#languageDropdown').textContent = 
    lang === 'es' ? 'Espa√±ol' : 
    lang === 'en' ? 'English' : 
    lang === 'de' ? 'Deutsch' : 
    lang === 'ru' ? '–†—É—Å—Å–∫–∏–π' : '‰∏≠Êñá';
  
  // Actualizar todos los elementos con data-translate
  document.querySelectorAll('[data-translate]').forEach(element => {
    const key = element.getAttribute('data-translate');
    if (translations[lang] && translations[lang][key]) {
      if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {
        element.value = translations[lang][key];
      } else {
        element.innerHTML = translations[lang][key];
      }
    }
  });
  
  // Actualizar texto del bot√≥n de live
  const liveButton = document.getElementById('liveButton');
  if (translations[lang] && translations[lang]['live']) {
    liveButton.querySelector('.d-none.d-md-inline').textContent = translations[lang]['live'];
  }
  
  // Guardar preferencia de idioma
  localStorage.setItem('preferredLanguage', lang);
}

// Inicializaci√≥n
document.addEventListener('DOMContentLoaded', () => {
  console.log("P√°gina de Gwother937 cargada correctamente.");

  // Cargar idioma preferido
  const preferredLanguage = localStorage.getItem('preferredLanguage') || 'es';
  changeLanguage(preferredLanguage);
  
  // Event listeners para los items del dropdown de idioma
  document.querySelectorAll('.dropdown-item').forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const lang = this.getAttribute('data-lang');
      changeLanguage(lang);
    });
  });

  // Cargar eventos al iniciar
  renderPublishedEvents();
  
  // Configurar bot√≥n de publicar
  const publishBtn = document.getElementById('publish-event');
  if (publishBtn) {
    publishBtn.addEventListener('click', () => {
      const title = document.getElementById('admin-event-title').value;
      const date = document.getElementById('admin-event-date').value;
      
      if (!title || !date) {
        alert('Por favor completa todos los campos');
        return;
      }
      
      // Validar que la fecha sea futura
      if (new Date(date) < new Date()) {
        alert('La fecha debe ser futura');
        return;
      }
      
      const newEvent = {
        id: Date.now().toString(),
        title,
        date,
        publishedAt: new Date().toISOString()
      };
      
      publishedEvents.push(newEvent);
      localStorage.setItem('publishedEvents', JSON.stringify(publishedEvents));
      renderPublishedEvents();
      
      // Limpiar formulario
      document.getElementById('admin-event-title').value = '';
      document.getElementById('admin-event-date').value = '';
      
      alert('¬°Stream publicado exitosamente!');
    });
  }
  
  // Configurar bot√≥n de admin
  const adminBtn = document.getElementById('admin-toggle-btn');
  if (adminBtn) {
    adminBtn.addEventListener('click', () => {
      const password = prompt('Ingresa la clave de administrador:');
      if (password === ADMIN_SECRET) {
        document.body.classList.toggle('show-admin');
        alert('Modo admin ' + (document.body.classList.contains('show-admin') ? 'activado' : 'desactivado'));
        renderPublishedEvents(); // Re-render para mostrar/ocultar botones de admin
      } else if (password) {
        alert('Clave incorrecta');
      }
    });
  }
  
  // Verificar par√°metro de admin en URL
  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.get('admin') === ADMIN_SECRET) {
    document.body.classList.add('show-admin');
    renderPublishedEvents();
  }
});
